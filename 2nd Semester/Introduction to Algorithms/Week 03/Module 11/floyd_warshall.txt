Floyd Warshall Algorithm 
The Floyd Warshall Algorithm is a dynamic programming algorithm used to find the shortest path between all pairs of
vertices in a weighted graph. It can handle negative weight edges, but it cannot handle negative weight cycles
The algorithm works by maintaining a matrix `dist` where `dist[i][j]` represents the
shortest distance from vertex `i` to vertex `j`. The algorithm iterates over all vertices
and for each vertex, it updates the shortest distance to all other vertices.

Algorithm:
1. Initialize the distance matrix `dist` with the weights of the graph. 
    If there is no direct edge between two vertices, the weight is set to infinity.
2. Iterate over all vertices `k` from 1 to `n` 
    (where `n` is the number of vertices in the graph).
3. For each vertex `k`, iterate over all pairs of vertices `i` and `j` 
4. Update the shortest distance from `i` to `j` using the following 
    formula:`dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j])`
5. Return the distance matrix `dist`
